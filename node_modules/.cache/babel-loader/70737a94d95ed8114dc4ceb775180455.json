{"ast":null,"code":"var _jsxFileName = \"/home/shopx/Documents/reactProj/burger_builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICE = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.6\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updateIngredients = { ...this.state.ingredients\n      };\n      updateIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n      this.updatePurchaseState(updateIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updateIngredients = { ...this.state.ingredients\n      };\n      updateIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICE[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n      this.updatePurchaseState(updateIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You continue!');\n      this.setState({\n        purchasing: true\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/shopx/Documents/reactProj/burger_builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICE","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updateIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\n\nconst INGREDIENT_PRICE = {\n    salad:0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.6\n};\n\nclass BurgerBuilder extends Component{\n\n    state = {\n        ingredients:{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat:0\n        },\n        totalPrice : 4 ,\n        purchasable : false ,\n        purchasing : false\n    }\n\n    updatePurchaseState (ingredients) {\n    \n        const sum = Object.keys(ingredients)\n                    .map(igKey => {\n                        return ingredients[igKey];\n                    })\n                    .reduce((sum,el)=>{\n                        return sum + el;\n                    },0);\n        this.setState({purchasable:sum>0});\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount+1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        }\n        updateIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updateIngredients});\n        this.updatePurchaseState(updateIngredients);\n    }\n\n    removeIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <=0){\n            return;\n        }\n        const updatedCount = oldCount-1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        }\n        updateIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice:newPrice,ingredients:updateIngredients});\n        this.updatePurchaseState(updateIngredients);\n    }\n\n    purchaseHandler = () =>{\n        this.setState({purchasing : true});\n    }\n\n    purchaseCancelHandler = () =>{\n        this.setState({purchasing : false});\n    }\n\n    purchaseContinueHandler = () =>{\n        alert('You continue!');\n        this.setState({purchasing : true});\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed = {this.purchaseCancelHandler}>\n                    <OrderSummary \n                        ingredients = {this.state.ingredients}\n                        price = {this.state.totalPrice}\n                        purchaseCancelled = {this.purchaseCancelHandler}\n                        purchaseContinued = {this.purchaseContinueHandler}/>\n                </Modal>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                    ingredientAdded = {this.addIngredientHandler} \n                    ingredientRemoved = {this.removeIngredientHandler}\n                    disabled = {disabledInfo}\n                    purchasable = {this.state.purchasable}\n                    ordered={this.purchaseHandler}\n                    price = {this.state.totalPrice}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}